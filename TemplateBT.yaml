AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  unicorn7 -- Code-free version
  This template removes all Lambda code, using an API Gateway -> DynamoDB integration.

Resources:
  # 1) Our Serverless API resource
  UnicornApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod

      # Define the OpenAPI/Swagger spec inline
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: "Unicorn API"
          version: "1.0"
        paths:
          /:
            get:
              # Use an AWS service integration directly with DynamoDB (Scan as an example).
              x-amazon-apigateway-integration:
                # The “uri” below indicates the AWS service (dynamodb) and action (Scan).
                uri:
                  Fn::Sub: "arn:aws:apigateway:${AWS::Region}:dynamodb:action/Scan"
                httpMethod: POST
                type: "aws"
                credentials:
                  Fn::GetAtt:
                    - ApiGatewayDynamoDBRole
                    - Arn
                requestTemplates:
                  application/json: |
                    {
                      "TableName": "unicorn"
                    }
                responses:
                  default:
                    statusCode: "200"
                    responseTemplates:
                      application/json: |
                        #set($items = $input.path('$.Items'))
                        #if($items.size() == 0)
                        {
                          "message": "No items in the unicorn table"
                        }
                        #else
                        $items
                        #end

  # 2) An IAM Role that API Gateway assumes to read from DynamoDB
  ApiGatewayDynamoDBRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccessForAPIGateway
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Scan
                Resource: !GetAtt UnicornTable.Arn

  # 3) The existing DynamoDB Table
  UnicornTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: unicorn
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  UnicornApiUrl:
    Description: "API Gateway endpoint (no code!)"
    Value: !Sub "https://${UnicornApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"